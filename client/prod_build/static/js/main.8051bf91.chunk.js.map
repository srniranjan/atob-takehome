{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","TruckLocation","props","truckStyle","position","width","height","left","top","border","backgroundColor","textAlign","color","fontSize","fontWeight","padding","style","text","MapComponent","center","lat","lng","zoom","locationsRef","collection","useCollectionData","locations","console","log","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","loc","location","name","id","App","useAuthState","user","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAE3B,SAASC,IAMP,OACE,wBAAQC,QANe,WACvB,IAAMC,EAAW,IAAIZ,IAASQ,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAIrB,iCAIJ,SAASG,EAAcC,GAErB,IAEMC,EAAa,CACjBC,SAAU,WACVC,MAJY,GAKZC,OAJa,GAKbC,MAAM,GACNC,KAAK,GAELC,OAAQ,sBACRC,gBAAiB,QACjBC,UAAW,SACXC,MAAO,UACPC,SAAU,EACVC,WAAY,OACZC,QAAS,GAEX,OAAQ,qBAAKC,MAAOb,EAAZ,SAAyBD,EAAMe,OAGzC,SAASC,IACP,IAAMhB,EAAQ,CACZiB,OAAQ,CAACC,IAAK,WAAYC,KAAM,aAChCC,KAAM,IAGFC,EAAe5B,EAAU6B,WAAW,mBANpB,EAOFC,YAAkBF,GAA/BG,EAPe,oBAUtB,OAFAC,QAAQC,IAAIF,GAEJ,cAAC,IAAD,CACNG,iBAAkB,CAAEC,IAAK,2CACzBC,cAAe7B,EAAMiB,OACrBa,YAAa9B,EAAMoB,KAHb,SAIHI,GAAaA,EAAUO,KAAI,SAAAC,GAC1B,OAAO,cAACjC,EAAD,CAA4BmB,IAAKc,EAAIC,SAAS,GAAId,IAAKa,EAAIC,SAAS,GAAIlB,KAAMiB,EAAIE,MAA9DF,EAAIG,SAexBC,MAVf,WAAgB,IAAD,EACEC,YAAa7C,GAArB8C,EADM,oBAGb,OACE,qBAAKC,UAAU,MAAMzB,MAAO,CAAEV,OAAQ,QAASD,MAAO,QAAtD,SACGmC,EAAO,cAACtB,EAAD,IAAmB,cAACtB,EAAD,OCpElB8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8051bf91.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyD4F5OZb1NTtkY422pe58CpQFd5wlgIFZU\",\n  authDomain: \"atob-takehome.firebaseapp.com\",\n  projectId: \"atob-takehome\",\n  storageBucket: \"atob-takehome.appspot.com\",\n  messagingSenderId: \"117907608442\",\n  appId: \"1:117907608442:web:06630c7df7f1af5725bcc3\"\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  \n  return (\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction TruckLocation(props) {\n  // console.log(props)\n  const width = 20;\n  const height = 20;\n  const truckStyle = {\n    position: 'absolute',\n    width,\n    height,\n    left: -width / 2,\n    top: -height / 2,\n\n    border: '2.5px solid #f44336',\n    backgroundColor: 'white',\n    textAlign: 'center',\n    color: '#3f51b5',\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 4\n  }\n  return (<div style={truckStyle}>{props.text}</div>);\n}\n\nfunction MapComponent() {\n  const props = {\n    center: {lat: 38.0006322, lng: -121.2894793}, \n    zoom: 10\n  }\n\n  const locationsRef = firestore.collection('truck_locations');\n  const [locations] = useCollectionData(locationsRef);\n  console.log(locations)\n  \n  return (<GoogleMapReact\n    bootstrapURLKeys={{ key: 'AIzaSyDYSiy0JBx9SqSsahYAe3wDecvX2JYaOyo' }}\n    defaultCenter={props.center}\n    defaultZoom={props.zoom} >\n      {locations && locations.map(loc => {\n        return <TruckLocation key={loc.id} lat={loc.location[0]} lng={loc.location[1]} text={loc.name} />\n      })}\n    </GoogleMapReact>)\n}\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\" style={{ height: '100vh', width: '100%' }}>\n      {user ? <MapComponent /> : <SignIn />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}